[tool.poetry]
name = "tspdashboard"
version = "0.1.0"
description = "This is a streamlit app that gives the user the ability to generate simple Travelling Salesperson Problem (TSP) instances and solve them with different algorithms and visiualize the results"
authors = ["Tue Christensen <tue@qampo.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
ortools = "^9.10.4067"
streamlit = "^1.36.0"
numpy = "^2.0.1"
matplotlib = "^3.9.1"
watchdog = "^4.0.1"


[tool.poetry.group.dev.dependencies]
ruff = "^0.5.4"
mypy = "^1.11.0"
pytest = "^8.3.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
target-version = "py311"
fix = true


[tool.ruff.lint]
unfixable = []

select = [
  # pyflakes
  "F",
  # pycodestyle
  "E", "W",
  # flake8-2020
  "YTT",
  # flake8-bugbear
  "B",
  # flake8-quotes
  "Q",
  # flake8-debugger
  "T10",
  # flake8-gettext
  "INT",
  # pylint
  "PL",
  # flake8-pytest-style
  "PT",
  # misc lints
  "PIE",
  # flake8-pyi
  "PYI",
  # tidy imports
  "TID",
  # implicit string concatenation
  "ISC",
  # type-checking imports
  "TCH",
  # comprehensions
  "C4",
  # pygrep-hooks
  "PGH",
  # Ruff-specific rules
  "RUF",
  # flake8-bandit: exec-builtin
  "S102",
  # numpy-legacy-random
  "NPY002",
  # Perflint
  "PERF",
  # flynt
  "FLY",
  # flake8-logging-format
  "G",
  # flake8-future-annotations
  "FA",
  # unconventional-import-alias
  "ICN001",
  # flake8-slots
  "SLOT",
  # flake8-raise
  "RSE"
]

ignore = ['ISC001', 'PLR2004', 'PT011']

[tool.poetry.scripts]
tspdashboard = "tspdashboard:main"


[tool.mypy]

disallow_untyped_defs = true
show_error_codes = true
no_implicit_optional = true
warn_return_any = true
warn_unused_ignores = true
ignore_missing_imports = true

exclude = ["scripts", "docs", "test"]